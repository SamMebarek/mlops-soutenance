name: CD

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: [self-hosted, Windows]
    timeout-minutes: 30

    defaults:
      run:
        shell: cmd
        working-directory: ${{ github.workspace }}

    env:
      DOCKER_HOST: tcp://localhost:2375
      COMPOSE_FILE_PATH: docker-compose.yaml
      COMPOSE_PROJECT_NAME: mlops

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: checks
        run: |
          echo Repo at: %CD%
          if not exist "%COMPOSE_FILE_PATH%" (
            echo [ERREUR] Fichier compose introuvable: %COMPOSE_FILE_PATH%
            dir /b /s docker-compose*.yml docker-compose*.yaml
            exit /b 1
          )

      - name: Check Docker API (_ping)
        run: |
          for /l %%i in (1,1,20) do (
            curl -s http://localhost:2375/_ping | find "OK" >nul && goto ok
            echo Attente Docker API...
            timeout /t 3 >nul
          )
          echo [ERREUR] Docker API tcp://localhost:2375 indisponible
          exit /b 1
          :ok
          echo Docker API OK

      - name: Docker info (via DOCKER_HOST)
        run: docker info

      - name: Docker login
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker logout
          echo %DOCKERHUB_TOKEN% | docker login -u %DOCKERHUB_USERNAME% --password-stdin

      - name: Ecrire .env (min)
        run: |
          > .env (
            echo FERNET_KEY=${{ secrets.FERNET_KEY }}
          )
          if not "${{ secrets.ADMIN_USER }}"==""       ( echo ADMIN_USER=${{ secrets.ADMIN_USER }}>> .env )
          if not "${{ secrets.ADMIN_PASSWORD }}"==""   ( echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}>> .env )
          if not "${{ secrets.JWT_SECRET }}"==""       ( echo JWT_SECRET=${{ secrets.JWT_SECRET }}>> .env )

      - name: Down
        run: docker compose -f "%COMPOSE_FILE_PATH%" --project-name %COMPOSE_PROJECT_NAME% down --remove-orphans

      - name: Pull images
        run: docker compose -f "%COMPOSE_FILE_PATH%" --project-name %COMPOSE_PROJECT_NAME% pull --ignore-pull-failures --include-deps

      - name: Up services
        run: docker compose -f "%COMPOSE_FILE_PATH%" --project-name %COMPOSE_PROJECT_NAME% up -d --remove-orphans --no-build

      - name: Status
        run: docker compose -f "%COMPOSE_FILE_PATH%" --project-name %COMPOSE_PROJECT_NAME% ps



      - name: Diagnostics (on failure)
        if: failure()
        run: |
          docker compose -f "%COMPOSE_FILE_PATH%" --project-name %COMPOSE_PROJECT_NAME% ps
          docker compose -f "%COMPOSE_FILE_PATH%" --project-name %COMPOSE_PROJECT_NAME% logs --no-color --tail=200
